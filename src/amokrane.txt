Lotuce2 is being controlled by The Durham adaptive Optics Real Time
Controller(DARC). DARC is a real-time system for astronomical adaptive optics
systems originally developed at Durham University and in use for the CANARY
instrument.

Initially, Lotuce used a single camera, but Lotuce2 uses four
cameras. The core functionality being used by Lotuce2 and camera acquisition
and slope calculation, all provided by DARC.  

For Lotuce2, DARC was installed
in two different machines. It was installed in a Mac Book pro Late2011, and a
desktop machine.  Different operative system were used, but the same software
were compiled over them. Desktop machine were used a Fedora 14 Linux kernel
2.6.35.13-91 32 bits architecture. Mac Book pro instead has installed a Linux
Ubuntu 13.10 kernel 3.x.x.x 64 bits architecture.  Besides this difference, the
behaviour was exactly the same. Notice that each kernel is not patched as real
time, but is was good enough for Lotuce2 purposes.

DARC is highly flexible with each camera protocol, it can handle USB,
iee1394 cameras (fire-wire cameras) as well as Gig protocols. Cameras used
are two Gigabit Ethernet protocol, an a Cisco 3500 was configured according
to plug all possible cameras. This switch was transparent for DARC for
either installation.  

Camera synchronization were a defiance to face. The approach taken was an
external trigger shared among the cameras. The device used to trigger the
camera acquisition is a single board computer, integrated and configurable GPIO.
Beagle Bone Black (BBB) was the selected one for these purposes. 

BBB has an ARM Cortex-A8 processor, with a Linux inside. BBB uses an embedded
Ubuntu 13.10 Linux . 100 [Khz] is the  maximum frequency reached turning on off
a GPIO. To improve this situation, a Programmable Real-time Unit(PRU) was used.
This unit performs embedded tasks that require real-time constraints. PRU is a
subsystem of the processor inside BBB. It is an independent CPU with its own
memory and instruction set. It can run its own program, completely independent
of the Linux kernel on the main CPU. Using PRU approach BBB could reach a signal
frequency of 200[MHz], accomplishing  with Lotuce22 requirements.  

DARC can get both camera data in a single stream, one camera stream next to the
other. It is mandatory that each camera protocol has its own driver
implementation make it compatible with DARC. Aravis is a library for video
acquisition which are being used to make the driver work in DARC. Preliminary
shows promising results, frames per seconds for our purposes should be up to
125. Using both cameras at same time (but not at maximum resolution) we are
getting results up to 200fps.  The trigger to acquire an image with cameras is
working fine but is still under testing. See figure [XXX] that shows the
current design. Slight modifications are not discard at this time.  

The main program should be running were DARC is installed (either Mac Book pro
or Desktop) and the signal trigger it will be send using TCP/IP protocol,
arriving at BBB, triggering the acquisition. Some automatic routines are being
implemented, like automatic sub aperture location, ideal image size and some
graphics plots to help to controls the instrument operations. Image [ZZZ] shows
prototype GUI examples.
